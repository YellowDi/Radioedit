local E, L, V, P, G, _ = unpack(ElvUI); --Import: Engine, Locales, ProfileDB, GlobalDB
local MM = E:GetModule("Minimap")

E.Options.args.maps = {
	type = "group",
	name = "01.2"..MINIMAP_LABEL,
	childGroups = "tab",
	args = {
		minimap = {
			order = 2,
			type = "group",
			name = MINIMAP_LABEL,
			get = function(info) return E.db.general.minimap[ info[#info] ] end,
			childGroups = "tab",
			args = {
				header = {
					order = 0,
					type = "header",
					name = MINIMAP_LABEL,
				},
				generalGroup = {
					order = 1,
					type = "group",
					name = L["General"],
					args = {
						enable = {
							order = 1,
							type = "toggle",
							name = L["Enable"],
							desc = L["Enable/Disable the minimap. |cffFF0000Warning: This will prevent you from seeing the minimap datatexts.|r"],
							get = function(info) return E.private.general.minimap[ info[#info] ] end,
							set = function(info, value) E.private.general.minimap[ info[#info] ] = value; E:StaticPopup_Show("PRIVATE_RL") end,
						},
						size = {
							order = 2,
							type = "range",
							name = L["Size"],
							desc = L["Adjust the size of the minimap."],
							min = 120, max = 250, step = 1,
							get = function(info) return E.db.general.minimap[ info[#info] ] end,
							set = function(info, value) E.db.general.minimap[ info[#info] ] = value; MM:UpdateSettings() end,
							disabled = function() return not E.private.general.minimap.enable end,
						},
					},
				},
				locationTextGroup = {
					order = 2,
					type = "group",
					name = L["Location Text"],
					args = {
						locationText = {
						    order = 1,
						    type = 'select',
						    name = L["Location Text"],
						    desc = L["Change settings for the display of the location text that is on the minimap."],
						    get = function(info) return E.db.general.minimap.locationText end,
						    set = function(info, value) E.db.general.minimap.locationText = value; MM:UpdateSettings(); MM:Update_ZoneText() end,
						    values = {
						        ['MOUSEOVER'] = L["Minimap Mouseover"],
						        ['SHOW'] = L["Always Display"],
						        ['HIDE'] = L["Hide"],
						    },
						    disabled = function() return not E.private.general.minimap.enable end,
						},
						locationFont = {
						    order = 2,
						    type = "select",
						    dialogControl = 'LSM30_Font',
						    name = L["Font"],
						    values = AceGUIWidgetLSMlists.font,
						    set = function(info, value) E.db.general.minimap.locationFont = value; MM:Update_ZoneText() end,
							disabled = function() return not E.private.general.minimap.enable end,
						},
						locationFontSize = {
						    order = 3,
						    type = "range",
						    name = L["Font Size"],
						    min = 6, max = 36, step = 1,
						    set = function(info, value) E.db.general.minimap.locationFontSize = value; MM:Update_ZoneText() end,
							disabled = function() return not E.private.general.minimap.enable end,
						},
						locationFontOutline = {
						    order = 4,
						    type = "select",
						    name = L["Font Outline"],
						    set = function(info, value) E.db.general.minimap.locationFontOutline = value; MM:Update_ZoneText() end,
							disabled = function() return not E.private.general.minimap.enable end,
						    values = {
						        ['NONE'] = L["None"],
						        ['OUTLINE'] = 'OUTLINE',
						        ['MONOCHROMEOUTLINE'] = 'MONOCROMEOUTLINE',
						        ['THICKOUTLINE'] = 'THICKOUTLINE',
						    },
						},
					},
				},
				zoomResetGroup = {
					order = 3,
					type = "group",
					name = L["Reset Zoom"],
					args = {
						enableZoomReset = {
							order = 1,
							type = "toggle",
							name = L["Reset Zoom"],
							get = function(info) return E.db.general.minimap.resetZoom.enable end,
							set = function(info, value) E.db.general.minimap.resetZoom.enable = value; MM:UpdateSettings() end,
							disabled = function() return not E.private.general.minimap.enable end,
						},
						zoomResetTime = {
							order = 2,
							type = "range",
							name = L["Seconds"],
							min = 1, max = 15, step = 1,
							get = function(info) return E.db.general.minimap.resetZoom.time end,
							set = function(info, value) E.db.general.minimap.resetZoom.time = value; MM:UpdateSettings() end,
							disabled = function() return (not E.db.general.minimap.resetZoom.enable or not E.private.general.minimap.enable) end,
						},
					},
				},
				icons = {
					order = 4,
					type = "group",
					name = L["Minimap Buttons"],
					args = {
						classHall = {
							order = 1,
							type = "group",
							name = GARRISON_LANDING_PAGE_TITLE,
							get = function(info) return E.db.general.minimap.icons.classHall[ info[#info] ] end,
							set = function(info, value) E.db.general.minimap.icons.classHall[ info[#info] ] = value; MM:UpdateSettings() end,
							args = {
								hideClassHallReport = {
									order = 1,
									type = "toggle",
									name = L["Hide"],
									get = function(info) return E.private.general.minimap.hideClassHallReport end,
									set = function(info, value) E.private.general.minimap.hideClassHallReport = value; E:StaticPopup_Show("PRIVATE_RL") end,
									disabled = function() return not E.private.general.minimap.enable end,
								},
								spacer = {
									order = 2,
									type = "description",
									name = "",
									width = "full"
								},
								position = {
									order = 3,
									type = "select",
									name = L["Position"],
									disabled = function() return (E.private.general.minimap.hideClassHallReport or not E.private.general.minimap.enable) end,
									values = {
										["LEFT"] = L["Left"],
										["RIGHT"] = L["Right"],
										["TOP"] = L["Top"],
										["BOTTOM"] = L["Bottom"],
										["TOPLEFT"] = L["Top Left"],
										["TOPRIGHT"] = L["Top Right"],
										["BOTTOMLEFT"] = L["Bottom Left"],
										["BOTTOMRIGHT"] = L["Bottom Right"],
									},
								},
								scale = {
									order = 4,
									type = "range",
									name = L["Scale"],
									min = 0.5, max = 2, step = 0.05,
									disabled = function() return (E.private.general.minimap.hideClassHallReport or not E.private.general.minimap.enable) end,
								},
								xOffset = {
									order = 5,
									type = "range",
									name = L["xOffset"],
									min = -50, max = 50, step = 1,
									disabled = function() return (E.private.general.minimap.hideClassHallReport or not E.private.general.minimap.enable) end,
								},
								yOffset = {
									order = 6,
									type = "range",
									name = L["yOffset"],
									min = -50, max = 50, step = 1,
									disabled = function() return (E.private.general.minimap.hideClassHallReport or not E.private.general.minimap.enable) end,
								},
							},
						},
						calendar = {
							order = 2,
							type = "group",
							name = L["Calendar"],
							get = function(info) return E.db.general.minimap.icons.calendar[ info[#info] ] end,
							set = function(info, value) E.db.general.minimap.icons.calendar[ info[#info] ] = value; MM:UpdateSettings() end,
							args = {
								hideCalendar = {
									order = 1,
									type = "toggle",
									name = L["Hide"],
									get = function(info) return E.private.general.minimap.hideCalendar end,
									set = function(info, value) E.private.general.minimap.hideCalendar = value; MM:UpdateSettings() end,
									disabled = function() return not E.private.general.minimap.enable end,
								},
								spacer = {
									order = 2,
									type = "description",
									name = "",
									width = "full"
								},
								position = {
									order = 3,
									type = "select",
									name = L["Position"],
									disabled = function() return (E.private.general.minimap.hideCalendar or not E.private.general.minimap.enable) end,
									values = {
										["LEFT"] = L["Left"],
										["RIGHT"] = L["Right"],
										["TOP"] = L["Top"],
										["BOTTOM"] = L["Bottom"],
										["TOPLEFT"] = L["Top Left"],
										["TOPRIGHT"] = L["Top Right"],
										["BOTTOMLEFT"] = L["Bottom Left"],
										["BOTTOMRIGHT"] = L["Bottom Right"],
									},
								},
								scale = {
									order = 4,
									type = "range",
									name = L["Scale"],
									min = 0.5, max = 2, step = 0.05,
									disabled = function() return (E.private.general.minimap.hideCalendar or not E.private.general.minimap.enable) end,
								},
								xOffset = {
									order = 5,
									type = "range",
									name = L["xOffset"],
									min = -50, max = 50, step = 1,
									disabled = function() return (E.private.general.minimap.hideCalendar or not E.private.general.minimap.enable) end,
								},
								yOffset = {
									order = 6,
									type = "range",
									name = L["yOffset"],
									min = -50, max = 50, step = 1,
									disabled = function() return (E.private.general.minimap.hideCalendar or not E.private.general.minimap.enable) end,
								},

							},
						},
						mail = {
							order = 3,
							type = "group",
							name = MAIL_LABEL,
							get = function(info) return E.db.general.minimap.icons.mail[ info[#info] ] end,
							set = function(info, value) E.db.general.minimap.icons.mail[ info[#info] ] = value; MM:UpdateSettings() end,
							args = {
								position = {
									order = 1,
									type = "select",
									name = L["Position"],
									disabled = function() return not E.private.general.minimap.enable end,
									values = {
										["LEFT"] = L["Left"],
										["RIGHT"] = L["Right"],
										["TOP"] = L["Top"],
										["BOTTOM"] = L["Bottom"],
										["TOPLEFT"] = L["Top Left"],
										["TOPRIGHT"] = L["Top Right"],
										["BOTTOMLEFT"] = L["Bottom Left"],
										["BOTTOMRIGHT"] = L["Bottom Right"],
									},
								},
								scale = {
									order = 2,
									type = "range",
									name = L["Scale"],
									min = 0.5, max = 2, step = 0.05,
									disabled = function() return not E.private.general.minimap.enable end,
								},
								xOffset = {
									order = 3,
									type = "range",
									name = L["xOffset"],
									min = -50, max = 50, step = 1,
									disabled = function() return not E.private.general.minimap.enable end,
								},
								yOffset = {
									order = 4,
									type = "range",
									name = L["yOffset"],
									min = -50, max = 50, step = 1,
									disabled = function() return not E.private.general.minimap.enable end,
								},
							},
						},
						lfgEye = {
							order = 4,
							type = "group",
							name = L["LFG Queue"],
							get = function(info) return E.db.general.minimap.icons.lfgEye[ info[#info] ] end,
							set = function(info, value) E.db.general.minimap.icons.lfgEye[ info[#info] ] = value; MM:UpdateSettings() end,
							args = {
								position = {
									order = 1,
									type = "select",
									name = L["Position"],
									disabled = function() return not E.private.general.minimap.enable end,
									values = {
										["LEFT"] = L["Left"],
										["RIGHT"] = L["Right"],
										["TOP"] = L["Top"],
										["BOTTOM"] = L["Bottom"],
										["TOPLEFT"] = L["Top Left"],
										["TOPRIGHT"] = L["Top Right"],
										["BOTTOMLEFT"] = L["Bottom Left"],
										["BOTTOMRIGHT"] = L["Bottom Right"],
									},
								},
								scale = {
									order = 2,
									type = "range",
									name = L["Scale"],
									min = 0.5, max = 2, step = 0.05,
									disabled = function() return not E.private.general.minimap.enable end,
								},
								xOffset = {
									order = 3,
									type = "range",
									name = L["xOffset"],
									min = -50, max = 50, step = 1,
									disabled = function() return not E.private.general.minimap.enable end,
								},
								yOffset = {
									order = 4,
									type = "range",
									name = L["yOffset"],
									min = -50, max = 50, step = 1,
									disabled = function() return not E.private.general.minimap.enable end,
								},
							},
						},
						difficulty = {
							order = 5,
							type = "group",
							name = L["Instance Difficulty"],
							get = function(info) return E.db.general.minimap.icons.difficulty[ info[#info] ] end,
							set = function(info, value) E.db.general.minimap.icons.difficulty[ info[#info] ] = value; MM:UpdateSettings() end,
							args = {
								position = {
									order = 1,
									type = "select",
									name = L["Position"],
									disabled = function() return not E.private.general.minimap.enable end,
									values = {
										["LEFT"] = L["Left"],
										["RIGHT"] = L["Right"],
										["TOP"] = L["Top"],
										["BOTTOM"] = L["Bottom"],
										["TOPLEFT"] = L["Top Left"],
										["TOPRIGHT"] = L["Top Right"],
										["BOTTOMLEFT"] = L["Bottom Left"],
										["BOTTOMRIGHT"] = L["Bottom Right"],
									},
								},
								scale = {
									order = 2,
									type = "range",
									name = L["Scale"],
									min = 0.5, max = 2, step = 0.05,
									disabled = function() return not E.private.general.minimap.enable end,
								},
								xOffset = {
									order = 3,
									type = "range",
									name = L["xOffset"],
									min = -50, max = 50, step = 1,
									disabled = function() return not E.private.general.minimap.enable end,
								},
								yOffset = {
									order = 4,
									type = "range",
									name = L["yOffset"],
									min = -50, max = 50, step = 1,
									disabled = function() return not E.private.general.minimap.enable end,
								},
							},
						},
						challengeMode = {
							order = 6,
							type = "group",
							name = CHALLENGE_MODE,
							get = function(info) return E.db.general.minimap.icons.challengeMode[ info[#info] ] end,
							set = function(info, value) E.db.general.minimap.icons.challengeMode[ info[#info] ] = value; MM:UpdateSettings() end,
							args = {
								position = {
									order = 1,
									type = "select",
									name = L["Position"],
									disabled = function() return not E.private.general.minimap.enable end,
									values = {
										["LEFT"] = L["Left"],
										["RIGHT"] = L["Right"],
										["TOP"] = L["Top"],
										["BOTTOM"] = L["Bottom"],
										["TOPLEFT"] = L["Top Left"],
										["TOPRIGHT"] = L["Top Right"],
										["BOTTOMLEFT"] = L["Bottom Left"],
										["BOTTOMRIGHT"] = L["Bottom Right"],
									},
								},
								scale = {
									order = 2,
									type = "range",
									name = L["Scale"],
									min = 0.5, max = 2, step = 0.05,
									disabled = function() return not E.private.general.minimap.enable end,
								},
								xOffset = {
									order = 3,
									type = "range",
									name = L["xOffset"],
									min = -50, max = 50, step = 1,
									disabled = function() return not E.private.general.minimap.enable end,
								},
								yOffset = {
									order = 4,
									type = "range",
									name = L["yOffset"],
									min = -50, max = 50, step = 1,
									disabled = function() return not E.private.general.minimap.enable end,
								},
							},
						},
						vehicleLeave = {
							order = 7,
							type = "group",
							name = LEAVE_VEHICLE,
							get = function(info) return E.db.general.minimap.icons.vehicleLeave[ info[#info] ] end,
							set = function(info, value) E.db.general.minimap.icons.vehicleLeave[ info[#info] ] = value; E:GetModule('ActionBars'):UpdateVehicleLeave() end,
							args = {
								hide = {
									order = 1,
									type = "toggle",
									name = L["Hide"],
									disabled = function() return not E.private.general.minimap.enable end,
								},
								spacer = {
									order = 2,
									type = "description",
									name = "",
									width = "full"
								},
								position = {
									order = 3,
									type = "select",
									name = L["Position"],
									disabled = function() return (E.db.general.minimap.icons.vehicleLeave.hide or not E.private.general.minimap.enable) end,
									values = {
										["LEFT"] = L["Left"],
										["RIGHT"] = L["Right"],
										["TOP"] = L["Top"],
										["BOTTOM"] = L["Bottom"],
										["TOPLEFT"] = L["Top Left"],
										["TOPRIGHT"] = L["Top Right"],
										["BOTTOMLEFT"] = L["Bottom Left"],
										["BOTTOMRIGHT"] = L["Bottom Right"],
									},
								},
								scale = {
									order = 4,
									type = "range",
									name = L["Scale"],
									min = 0.5, max = 2, step = 0.05,
									disabled = function() return (E.db.general.minimap.icons.vehicleLeave.hide or not E.private.general.minimap.enable) end,
								},
								xOffset = {
									order = 5,
									type = "range",
									name = L["xOffset"],
									min = -50, max = 50, step = 1,
									disabled = function() return (E.db.general.minimap.icons.vehicleLeave.hide or not E.private.general.minimap.enable) end,
								},
								yOffset = {
									order = 6,
									type = "range",
									name = L["yOffset"],
									min = -50, max = 50, step = 1,
									disabled = function() return (E.db.general.minimap.icons.vehicleLeave.hide or not E.private.general.minimap.enable) end,
								},
							},
						},
						ticket = {
							order = 8,
							type = "group",
							name = L["Open Ticket"],
							get = function(info) return E.db.general.minimap.icons.ticket[ info[#info] ] end,
							set = function(info, value) E.db.general.minimap.icons.ticket[ info[#info] ] = value; MM:UpdateSettings() end,
							args = {
								position = {
									order = 1,
									type = "select",
									name = L["Position"],
									disabled = function() return not E.private.general.minimap.enable end,
									values = {
										["LEFT"] = L["Left"],
										["RIGHT"] = L["Right"],
										["TOP"] = L["Top"],
										["BOTTOM"] = L["Bottom"],
										["TOPLEFT"] = L["Top Left"],
										["TOPRIGHT"] = L["Top Right"],
										["BOTTOMLEFT"] = L["Bottom Left"],
										["BOTTOMRIGHT"] = L["Bottom Right"],
									},
								},
								scale = {
									order = 2,
									type = "range",
									name = L["Scale"],
									min = 0.5, max = 2, step = 0.05,
									disabled = function() return not E.private.general.minimap.enable end,
								},
								xOffset = {
									order = 3,
									type = "range",
									name = L["xOffset"],
									min = -50, max = 50, step = 1,
									disabled = function() return not E.private.general.minimap.enable end,
								},
								yOffset = {
									order = 4,
									type = "range",
									name = L["yOffset"],
									min = -50, max = 50, step = 1,
									disabled = function() return not E.private.general.minimap.enable end,
								},
							},
						},
					},
				},
			},
		},
	},
}
