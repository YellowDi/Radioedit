--------------------------------------- 小隊隊友装备等级 Author: M-------------------------------------local LibEvent = LibStub:GetLibrary("LibEvent.7000")local LibSchedule = LibStub:GetLibrary("LibSchedule.7000")local LibItemInfo = LibStub:GetLibrary("LibItemInfo.7000")local members, numMembers = {}, 0local ITEM_LEVEL_ABBR = ITEM_LEVEL_ABBR or "ItemLevel"--獲取角色類型圖標local function GetRoleIcon(unit)    local role = UnitGroupRolesAssigned(unit)    if (role == "TANK") then        return "|TInterface\\LFGFrame\\UI-LFG-ICON-PORTRAITROLES:14:14:0:0:64:64:0:19:22:41|t"    elseif (role == "HEALER") then        return "|TInterface\\LFGFrame\\UI-LFG-ICON-PORTRAITROLES:14:14:0:0:64:64:20:39:1:20|t"    elseif (role == "DAMAGER") then        return "|TInterface\\LFGFrame\\UI-LFG-ICON-PORTRAITROLES:14:14:0:0:64:64:20:39:22:41|t"    else        return ""    endend--打印隊伍裝備等級local function PrintPartyItemLevel()    local color    DEFAULT_CHAT_FRAME:AddMessage(string.rep("-", 26), 1, 0.8, 0)    for _, v in pairs(members) do        color = RAID_CLASS_COLORS[v.class] or NORMAL_FONT_COLOR        DEFAULT_CHAT_FRAME:AddMessage(format("<%s> %s %.1f |c%s%s|r", ITEM_LEVEL_ABBR, GetRoleIcon(v.unit), v.level, color.colorStr, v.name), 1, 0.82, 0)    end    DEFAULT_CHAT_FRAME:AddMessage(string.rep("-", 26), 1, 0.8, 0)end--多人安裝后防止重復發送local lastBroadcastTimer = 0local function filter(self, event, msg, name, ...)    if (string.find(msg, "<"..ITEM_LEVEL_ABBR..">")) then        local uname = UnitName("player") .. "-" .. GetRealmName()        if (name ~= uname) then            lastBroadcastTimer = GetTime()        end    end    return false, msg, name, ...endChatFrame_AddMessageEventFilter("CHAT_MSG_PARTY", filter)ChatFrame_AddMessageEventFilter("CHAT_MSG_INSTANCE_CHAT", filter)--報告隊伍裝等local function BroadcastItemLevelToParty()    if (GetTime() - lastBroadcastTimer < 5) then return end    local channel = IsInGroup(LE_PARTY_CATEGORY_INSTANCE) and "INSTANCE_CHAT" or "PARTY"    SendChatMessage(string.rep("-", 26), channel)    for _, v in pairs(members) do        SendChatMessage(format("<%s> %.1f %s", ITEM_LEVEL_ABBR, v.level, v.name), channel)    end    SendChatMessage(string.rep("-", 26), channel)end--標識local turnon = false--讀取隊友信息local function onExecuteParty(self)    local guid, unit    local temp = {}    local num = GetNumSubgroupMembers()    for i = 1, num do        unit = "party"..i        guid = UnitGUID(unit)        temp[guid] = unit        if (guid and not members[guid] and UnitIsConnected(unit)) then            members[guid] = { name = UnitName(unit) or "", class = select(2,UnitClass(unit)), level = -1, unit = unit }        end    end    local count = 0    for k, v in pairs(members) do        if (not temp[k]) then            members[k] = nil        else            members[k].final = nil            count = count + 1        end    end    if (num == count) then        turnon = true        for _, v in pairs(members) do            if (v.unit and CanInspect(v.unit)) then                ClearInspectPlayer()                NotifyInspect(v.unit)                break            end        end        return true    endend--讀取隊友裝等local function onExecuteInspect(self)    if (not members[self.identity]) then return true end    local data = members[self.identity]    local unknownCount, equippedLevel = LibItemInfo:GetUnitItemLevel(self.unit)    if (unknownCount ~= 0) then return end    if (equippedLevel ~= data.level) then        data.level = equippedLevel    elseif (equippedLevel > 0) then        local done = true        data.final = true        for _, v in pairs(members) do            if (not v.final and v.unit and CanInspect(v.unit)) then                ClearInspectPlayer()                NotifyInspect(v.unit)                done = false                break            end        end        if (done) then            members[UnitGUID("player")] = {name=UnitName("player"),class=select(2,UnitClass("player")),level=select(2, GetAverageItemLevel()),final=true,unit="player"}            LibEvent:trigger("PARTY_INSPECT_READY")            turnon = false        end        return true    endendLibEvent:attachEvent("GROUP_ROSTER_UPDATE", function(this)    if (TinyInspectDB and not TinyInspectDB.PartyItemLevel) then        return    end    if (not IsInRaid()) then        local numCurrent = GetNumSubgroupMembers()        if (numCurrent > numMembers) then            LibSchedule:AddTask({                identity  = "AllPartyConnected",                elasped   = 2,                begined   = GetTime() + 2,                expired   = GetTime() + 12,                onExecute = onExecuteParty,            })        end        numMembers = numCurrent    endend)LibEvent:attachEvent("INSPECT_READY", function(this, arg1)    if (TinyInspectDB and not TinyInspectDB.PartyItemLevel) then        return    end    if (InspectFrame and InspectFrame.unit) then return end    if (members[arg1] and turnon) then        LibSchedule:AddTask({            unit      = members[arg1].unit,            identity  = arg1,            elasped   = 0.6,            expired   = GetTime() + 3.6,            onTimeout = function(self) turnon = false end,            onExecute = onExecuteInspect,        })    endend)LibEvent:attachTrigger("PARTY_INSPECT_READY", function(this)    if (TinyInspectDB and TinyInspectDB.PartyItemLevelToSelf) then        PrintPartyItemLevel()    end    if (not TinyInspectDB or (TinyInspectDB and TinyInspectDB.PartyItemLevelToParty)) then        BroadcastItemLevelToParty()    endend)